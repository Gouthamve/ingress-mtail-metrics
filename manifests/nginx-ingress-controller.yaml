apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-ingress-controller
  namespace: kube-system
  annotations:
        prometheus.io/port: "3903"
        prometheus.io/scrape: "true"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: nginx-ingress-controller
    spec:
      # hostNetwork makes it possible to use ipv6 and to preserve the source IP correctly regardless of docker configuration
      # however, it is not a hard dependency of the nginx-ingress-controller itself and it may cause issues if port 10254 already is taken on the host
      # that said, since hostPort is broken on CNI (https://github.com/kubernetes/kubernetes/issues/31307) we have to use hostNetwork where CNI is used
      # like with kubeadm
      # hostNetwork: true
      terminationGracePeriodSeconds: 60
      containers:
      - image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.7
        name: nginx-ingress-controller
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        volumeMounts:
          - mountPath: /etc/nginx/template
            name: nginx-template-volume
            readOnly: true
          - mountPath: /mtail/logs
            name: log-volume

      - image: gouthamve/matil 
        name: nginx-mtail 
        args: ["access.log"]
        volumeMounts:
          - mountPath: /mtail/logs
            name: log-volume
          - mountPath: /mtail/progs
            name: prog-volume

      initContainers:
      - name: mtail-config
        image: gouthamve/nginx-mtail-configgen
        command:
        - /main
        - /config/config.yaml
        - /mtail/progs/nginx.mtail
        volumeMounts:
        - mountPath: /config
          name: nginx-mtail-template-volume
        - mountPath: /mtail/progs
          name: prog-volume
      volumes:
        - name: nginx-template-volume
          configMap:
            name: nginx-template
            items:
            - key: nginx.tmpl
              path: nginx.tmpl
        - name: nginx-mtail-template-volume
          configMap:
            name: nginx-mtail-template
            items:
            - key: config.yaml
              path: config.yaml
        - name: log-volume
          emptyDir: {}
        - name: prog-volume
          emptyDir: {}
